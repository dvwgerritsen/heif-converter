name: Build Node.js Artifact

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            platform: win32-x64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Configure and Build projects (Windows & OSX)
        if: "!contains(matrix.os, 'ubuntu')"
        run: |
          # Build project
          npm install --omit-optional
          npm run configure
          npm run build
          
          # Copy .node in the release folder
          cp ./src/build/Release/converter.node ./release/${{ matrix.PLATFORM }}/lib/converter.${{ matrix.PLATFORM }}.node

      - name: Copy .dll files for artifacts and tests (Windows)
        if: contains(matrix.os, 'windows')
        run: |
          # Copy for artifact
          cp platform/${{ matrix.PLATFORM }}/bin/heif.dll ./release/${{ matrix.PLATFORM }}/lib/heif.dll
          cp platform/${{ matrix.PLATFORM }}/bin/turbojpeg.dll ./release/${{ matrix.PLATFORM }}/lib/turbojpeg.dll
          cp platform/${{ matrix.PLATFORM }}/bin/libde265.dll ./release/${{ matrix.PLATFORM }}/lib/libde265.dll
          cp platform/${{ matrix.PLATFORM }}/bin/libx265.dll ./release/${{ matrix.PLATFORM }}/lib/libx265.dll
          cp platform/${{ matrix.PLATFORM }}/bin/libpng16.dll ./release/${{ matrix.PLATFORM }}/lib/libpng16.dll
          cp platform/${{ matrix.PLATFORM }}/bin/zlib1.dll ./release/${{ matrix.PLATFORM }}/lib/zlib1.dll

      - name: Run tests
        if: "!contains(matrix.os, 'ubuntu')"
        run: npm run test

      - name: Create tarball of the release folder
        run: |
          cd ./release
          tar -czf ${{ matrix.platform }}.tar.gz *

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: release
          path: ./release/${{ matrix.platform }}.tar.gz
